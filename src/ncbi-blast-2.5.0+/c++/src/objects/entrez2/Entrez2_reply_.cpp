/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'entrez2.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/entrez2/Entrez2_reply.hpp>
#include <objects/entrez2/E2Reply.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CEntrez2_reply_Base::ResetReply(void)
{
    if ( !m_Reply ) {
        m_Reply.Reset(new TReply());
        return;
    }
    (*m_Reply).Reset();
}

void CEntrez2_reply_Base::SetReply(CEntrez2_reply_Base::TReply& value)
{
    m_Reply.Reset(&value);
}

void CEntrez2_reply_Base::ResetServer(void)
{
    m_Server.erase();
    m_set_State[0] &= ~0x30;
}

void CEntrez2_reply_Base::ResetMsg(void)
{
    m_Msg.erase();
    m_set_State[0] &= ~0xc0;
}

void CEntrez2_reply_Base::ResetKey(void)
{
    m_Key.erase();
    m_set_State[0] &= ~0x300;
}

void CEntrez2_reply_Base::ResetCookie(void)
{
    m_Cookie.erase();
    m_set_State[0] &= ~0xc00;
}

void CEntrez2_reply_Base::Reset(void)
{
    ResetReply();
    ResetDt();
    ResetServer();
    ResetMsg();
    ResetKey();
    ResetCookie();
}

BEGIN_NAMED_BASE_CLASS_INFO("Entrez2-reply", CEntrez2_reply)
{
    SET_CLASS_MODULE("NCBI-Entrez2");
    ADD_NAMED_REF_MEMBER("reply", m_Reply, CE2Reply);
    ADD_NAMED_MEMBER("dt", m_Dt, CLASS, (CEntrez2_dt))->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("server", m_Server)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("msg", m_Msg)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("key", m_Key)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("cookie", m_Cookie)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CEntrez2_reply_Base::CEntrez2_reply_Base(void)
    : m_Dt(CEntrez2_dt(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetReply();
    }
}

// destructor
CEntrez2_reply_Base::~CEntrez2_reply_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

