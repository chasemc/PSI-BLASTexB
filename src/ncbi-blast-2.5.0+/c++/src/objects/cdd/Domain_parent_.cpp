/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'cdd.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/cdd/Domain_parent.hpp>
#include <objects/cdd/Cdd_id.hpp>
#include <objects/seq/Seq_annot.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CDomain_parent_Base::, EParent_type, true)
{
    SET_ENUM_INTERNAL_NAME("Domain-parent", "parent-type");
    SET_ENUM_MODULE("NCBI-Cdd");
    ADD_ENUM_VALUE("classical", eParent_type_classical);
    ADD_ENUM_VALUE("fusion", eParent_type_fusion);
    ADD_ENUM_VALUE("deletion", eParent_type_deletion);
    ADD_ENUM_VALUE("permutation", eParent_type_permutation);
    ADD_ENUM_VALUE("other", eParent_type_other);
}
END_ENUM_INFO

void CDomain_parent_Base::ResetParentid(void)
{
    if ( !m_Parentid ) {
        m_Parentid.Reset(new TParentid());
        return;
    }
    (*m_Parentid).Reset();
}

void CDomain_parent_Base::SetParentid(CDomain_parent_Base::TParentid& value)
{
    m_Parentid.Reset(&value);
}

void CDomain_parent_Base::ResetSeqannot(void)
{
    m_Seqannot.Reset();
}

void CDomain_parent_Base::SetSeqannot(CDomain_parent_Base::TSeqannot& value)
{
    m_Seqannot.Reset(&value);
}

CDomain_parent_Base::TSeqannot& CDomain_parent_Base::SetSeqannot(void)
{
    if ( !m_Seqannot )
        m_Seqannot.Reset(new ncbi::objects::CSeq_annot());
    return (*m_Seqannot);
}

void CDomain_parent_Base::Reset(void)
{
    ResetParent_type();
    ResetParentid();
    ResetSeqannot();
}

BEGIN_NAMED_BASE_CLASS_INFO("Domain-parent", CDomain_parent)
{
    SET_CLASS_MODULE("NCBI-Cdd");
    ADD_NAMED_ENUM_MEMBER("parent-type", m_Parent_type, EParent_type)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("parentid", m_Parentid, CCdd_id);
    ADD_NAMED_REF_MEMBER("seqannot", m_Seqannot, CSeq_annot)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CDomain_parent_Base::CDomain_parent_Base(void)
    : m_Parent_type((EParent_type)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetParentid();
    }
}

// destructor
CDomain_parent_Base::~CDomain_parent_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

