/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'cdd.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/cdd/Cdd_tree.hpp>
#include <objects/cdd/Cdd_descr_set.hpp>
#include <objects/cdd/Cdd_id.hpp>
#include <objects/cdd/Cdd_id_set.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CCdd_tree_Base::ResetName(void)
{
    m_Name.erase();
    m_set_State[0] &= ~0x3;
}

void CCdd_tree_Base::ResetId(void)
{
    if ( !m_Id ) {
        m_Id.Reset(new TId());
        return;
    }
    (*m_Id).Reset();
}

void CCdd_tree_Base::SetId(CCdd_tree_Base::TId& value)
{
    m_Id.Reset(&value);
}

void CCdd_tree_Base::ResetDescription(void)
{
    m_Description.Reset();
}

void CCdd_tree_Base::SetDescription(CCdd_tree_Base::TDescription& value)
{
    m_Description.Reset(&value);
}

CCdd_tree_Base::TDescription& CCdd_tree_Base::SetDescription(void)
{
    if ( !m_Description )
        m_Description.Reset(new ncbi::objects::CCdd_descr_set());
    return (*m_Description);
}

void CCdd_tree_Base::ResetParent(void)
{
    m_Parent.Reset();
}

void CCdd_tree_Base::SetParent(CCdd_tree_Base::TParent& value)
{
    m_Parent.Reset(&value);
}

CCdd_tree_Base::TParent& CCdd_tree_Base::SetParent(void)
{
    if ( !m_Parent )
        m_Parent.Reset(new ncbi::objects::CCdd_id());
    return (*m_Parent);
}

void CCdd_tree_Base::ResetChildren(void)
{
    m_Children.Reset();
}

void CCdd_tree_Base::SetChildren(CCdd_tree_Base::TChildren& value)
{
    m_Children.Reset(&value);
}

CCdd_tree_Base::TChildren& CCdd_tree_Base::SetChildren(void)
{
    if ( !m_Children )
        m_Children.Reset(new ncbi::objects::CCdd_id_set());
    return (*m_Children);
}

void CCdd_tree_Base::ResetSiblings(void)
{
    m_Siblings.Reset();
}

void CCdd_tree_Base::SetSiblings(CCdd_tree_Base::TSiblings& value)
{
    m_Siblings.Reset(&value);
}

CCdd_tree_Base::TSiblings& CCdd_tree_Base::SetSiblings(void)
{
    if ( !m_Siblings )
        m_Siblings.Reset(new ncbi::objects::CCdd_id_set());
    return (*m_Siblings);
}

void CCdd_tree_Base::ResetNeighbors(void)
{
    m_Neighbors.Reset();
}

void CCdd_tree_Base::SetNeighbors(CCdd_tree_Base::TNeighbors& value)
{
    m_Neighbors.Reset(&value);
}

CCdd_tree_Base::TNeighbors& CCdd_tree_Base::SetNeighbors(void)
{
    if ( !m_Neighbors )
        m_Neighbors.Reset(new ncbi::objects::CCdd_id_set());
    return (*m_Neighbors);
}

void CCdd_tree_Base::Reset(void)
{
    ResetName();
    ResetId();
    ResetDescription();
    ResetParent();
    ResetChildren();
    ResetSiblings();
    ResetNeighbors();
}

BEGIN_NAMED_BASE_CLASS_INFO("Cdd-tree", CCdd_tree)
{
    SET_CLASS_MODULE("NCBI-Cdd");
    ADD_NAMED_STD_MEMBER("name", m_Name)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("id", m_Id, CCdd_id_set);
    ADD_NAMED_REF_MEMBER("description", m_Description, CCdd_descr_set)->SetOptional();
    ADD_NAMED_REF_MEMBER("parent", m_Parent, CCdd_id)->SetOptional();
    ADD_NAMED_REF_MEMBER("children", m_Children, CCdd_id_set)->SetOptional();
    ADD_NAMED_REF_MEMBER("siblings", m_Siblings, CCdd_id_set)->SetOptional();
    ADD_NAMED_REF_MEMBER("neighbors", m_Neighbors, CCdd_id_set)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CCdd_tree_Base::CCdd_tree_Base(void)
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetId();
    }
}

// destructor
CCdd_tree_Base::~CCdd_tree_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

