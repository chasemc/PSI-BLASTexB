/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'omssa.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/omssa/MSMZHit.hpp>
#include <objects/omssa/MSIon.hpp>
#include <objects/omssa/MSIonAnnot.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CMSMZHit_Base::ResetMoreion(void)
{
    m_Moreion.Reset();
}

void CMSMZHit_Base::SetMoreion(CMSMZHit_Base::TMoreion& value)
{
    m_Moreion.Reset(&value);
}

CMSMZHit_Base::TMoreion& CMSMZHit_Base::SetMoreion(void)
{
    if ( !m_Moreion )
        m_Moreion.Reset(new ncbi::objects::CMSIon());
    return (*m_Moreion);
}

void CMSMZHit_Base::ResetAnnotation(void)
{
    m_Annotation.Reset();
}

void CMSMZHit_Base::SetAnnotation(CMSMZHit_Base::TAnnotation& value)
{
    m_Annotation.Reset(&value);
}

CMSMZHit_Base::TAnnotation& CMSMZHit_Base::SetAnnotation(void)
{
    if ( !m_Annotation )
        m_Annotation.Reset(new ncbi::objects::CMSIonAnnot());
    return (*m_Annotation);
}

void CMSMZHit_Base::Reset(void)
{
    ResetIon();
    ResetCharge();
    ResetNumber();
    ResetMz();
    ResetIndex();
    ResetMoreion();
    ResetAnnotation();
}

BEGIN_NAMED_BASE_CLASS_INFO("MSMZHit", CMSMZHit)
{
    SET_CLASS_MODULE("OMSSA");
    ADD_NAMED_ENUM_MEMBER("ion", m_Ion, EMSIonType)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("charge", m_Charge)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("number", m_Number)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("mz", m_Mz)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("index", m_Index)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("moreion", m_Moreion, CMSIon)->SetOptional();
    ADD_NAMED_REF_MEMBER("annotation", m_Annotation, CMSIonAnnot)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CMSMZHit_Base::CMSMZHit_Base(void)
    : m_Ion((int)(0)), m_Charge(0), m_Number(0), m_Mz(0), m_Index(0)
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CMSMZHit_Base::~CMSMZHit_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

