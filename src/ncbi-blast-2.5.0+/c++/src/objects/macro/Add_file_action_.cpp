/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'macro.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/macro/Add_file_action.hpp>
#include <objects/macro/Apply_table_extra_data.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CAdd_file_action_Base::ResetFilename(void)
{
    m_Filename.erase();
    m_set_State[0] &= ~0x3;
}

void CAdd_file_action_Base::ResetIn_memory_table(void)
{
    m_In_memory_table.Reset();
}

void CAdd_file_action_Base::SetIn_memory_table(CAdd_file_action_Base::TIn_memory_table& value)
{
    m_In_memory_table.Reset(&value);
}

CAdd_file_action_Base::TIn_memory_table& CAdd_file_action_Base::SetIn_memory_table(void)
{
    if ( !m_In_memory_table )
        m_In_memory_table.Reset(new ncbi::objects::CApply_table_extra_data());
    return (*m_In_memory_table);
}

void CAdd_file_action_Base::Reset(void)
{
    ResetFilename();
    ResetIn_memory_table();
}

BEGIN_NAMED_BASE_CLASS_INFO("Add-file-action", CAdd_file_action)
{
    SET_CLASS_MODULE("NCBI-Macro");
    ADD_NAMED_STD_MEMBER("filename", m_Filename)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("in-memory-table", m_In_memory_table, CApply_table_extra_data)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CAdd_file_action_Base::CAdd_file_action_Base(void)
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CAdd_file_action_Base::~CAdd_file_action_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

