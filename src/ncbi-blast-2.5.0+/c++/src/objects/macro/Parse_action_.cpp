/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'macro.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/macro/Parse_action.hpp>
#include <objects/macro/Parse_dest.hpp>
#include <objects/macro/Parse_src.hpp>
#include <objects/macro/Text_portion.hpp>
#include <objects/macro/Text_transform_set.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CParse_action_Base::ResetPortion(void)
{
    if ( !m_Portion ) {
        m_Portion.Reset(new TPortion());
        return;
    }
    (*m_Portion).Reset();
}

void CParse_action_Base::SetPortion(CParse_action_Base::TPortion& value)
{
    m_Portion.Reset(&value);
}

void CParse_action_Base::ResetSrc(void)
{
    if ( !m_Src ) {
        m_Src.Reset(new TSrc());
        return;
    }
    (*m_Src).Reset();
}

void CParse_action_Base::SetSrc(CParse_action_Base::TSrc& value)
{
    m_Src.Reset(&value);
}

void CParse_action_Base::ResetDest(void)
{
    if ( !m_Dest ) {
        m_Dest.Reset(new TDest());
        return;
    }
    (*m_Dest).Reset();
}

void CParse_action_Base::SetDest(CParse_action_Base::TDest& value)
{
    m_Dest.Reset(&value);
}

void CParse_action_Base::ResetTransform(void)
{
    m_Transform.Reset();
}

void CParse_action_Base::SetTransform(CParse_action_Base::TTransform& value)
{
    m_Transform.Reset(&value);
}

CParse_action_Base::TTransform& CParse_action_Base::SetTransform(void)
{
    if ( !m_Transform )
        m_Transform.Reset(new ncbi::objects::CText_transform_set());
    return (*m_Transform);
}

void CParse_action_Base::Reset(void)
{
    ResetPortion();
    ResetSrc();
    ResetDest();
    ResetCapitalization();
    ResetRemove_from_parsed();
    ResetTransform();
    ResetExisting_text();
}

BEGIN_NAMED_BASE_CLASS_INFO("Parse-action", CParse_action)
{
    SET_CLASS_MODULE("NCBI-Macro");
    ADD_NAMED_REF_MEMBER("portion", m_Portion, CText_portion);
    ADD_NAMED_REF_MEMBER("src", m_Src, CParse_src);
    ADD_NAMED_REF_MEMBER("dest", m_Dest, CParse_dest);
    ADD_NAMED_ENUM_MEMBER("capitalization", m_Capitalization, ECap_change)->SetDefault(new TCapitalization(eCap_change_none))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("remove-from-parsed", m_Remove_from_parsed)->SetDefault(new TRemove_from_parsed(false))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("transform", m_Transform, CText_transform_set)->SetOptional();
    ADD_NAMED_ENUM_MEMBER("existing-text", m_Existing_text, EExistingTextOption)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CParse_action_Base::CParse_action_Base(void)
    : m_Capitalization(eCap_change_none), m_Remove_from_parsed(false), m_Existing_text((ncbi::objects::EExistingTextOption)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetPortion();
        ResetSrc();
        ResetDest();
    }
}

// destructor
CParse_action_Base::~CParse_action_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

