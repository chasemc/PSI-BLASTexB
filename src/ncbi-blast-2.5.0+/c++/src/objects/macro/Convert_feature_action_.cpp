/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'macro.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/macro/Convert_feature_action.hpp>
#include <objects/macro/Constraint_choice_set.hpp>
#include <objects/macro/Conver_feature_dst_options.hpp>
#include <objects/macro/Conver_feature_src_options.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CConvert_feature_action_Base::ResetSrc_options(void)
{
    m_Src_options.Reset();
}

void CConvert_feature_action_Base::SetSrc_options(CConvert_feature_action_Base::TSrc_options& value)
{
    m_Src_options.Reset(&value);
}

CConvert_feature_action_Base::TSrc_options& CConvert_feature_action_Base::SetSrc_options(void)
{
    if ( !m_Src_options )
        m_Src_options.Reset(new ncbi::objects::CConvert_feature_src_options());
    return (*m_Src_options);
}

void CConvert_feature_action_Base::ResetDst_options(void)
{
    m_Dst_options.Reset();
}

void CConvert_feature_action_Base::SetDst_options(CConvert_feature_action_Base::TDst_options& value)
{
    m_Dst_options.Reset(&value);
}

CConvert_feature_action_Base::TDst_options& CConvert_feature_action_Base::SetDst_options(void)
{
    if ( !m_Dst_options )
        m_Dst_options.Reset(new ncbi::objects::CConvert_feature_dst_options());
    return (*m_Dst_options);
}

void CConvert_feature_action_Base::ResetSrc_feat_constraint(void)
{
    m_Src_feat_constraint.Reset();
}

void CConvert_feature_action_Base::SetSrc_feat_constraint(CConvert_feature_action_Base::TSrc_feat_constraint& value)
{
    m_Src_feat_constraint.Reset(&value);
}

CConvert_feature_action_Base::TSrc_feat_constraint& CConvert_feature_action_Base::SetSrc_feat_constraint(void)
{
    if ( !m_Src_feat_constraint )
        m_Src_feat_constraint.Reset(new ncbi::objects::CConstraint_choice_set());
    return (*m_Src_feat_constraint);
}

void CConvert_feature_action_Base::Reset(void)
{
    ResetType_from();
    ResetType_to();
    ResetSrc_options();
    ResetDst_options();
    ResetLeave_original();
    ResetSrc_feat_constraint();
}

BEGIN_NAMED_BASE_CLASS_INFO("Convert-feature-action", CConvert_feature_action)
{
    SET_CLASS_MODULE("NCBI-Macro");
    ADD_NAMED_ENUM_MEMBER("type-from", m_Type_from, EMacro_feature_type)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_ENUM_MEMBER("type-to", m_Type_to, EMacro_feature_type)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("src-options", m_Src_options, CConvert_feature_src_options)->SetOptional();
    ADD_NAMED_REF_MEMBER("dst-options", m_Dst_options, CConvert_feature_dst_options)->SetOptional();
    ADD_NAMED_STD_MEMBER("leave-original", m_Leave_original)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("src-feat-constraint", m_Src_feat_constraint, CConstraint_choice_set)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CConvert_feature_action_Base::CConvert_feature_action_Base(void)
    : m_Type_from((ncbi::objects::EMacro_feature_type)(0)), m_Type_to((ncbi::objects::EMacro_feature_type)(0)), m_Leave_original(0)
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CConvert_feature_action_Base::~CConvert_feature_action_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

