/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'biblio.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/biblio/Author.hpp>
#include <objects/biblio/Affil.hpp>
#include <objects/general/Person_id.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CAuthor_Base::, ELevel, false)
{
    SET_ENUM_INTERNAL_NAME("Author", "level");
    SET_ENUM_MODULE("NCBI-Biblio");
    ADD_ENUM_VALUE("primary", eLevel_primary);
    ADD_ENUM_VALUE("secondary", eLevel_secondary);
}
END_ENUM_INFO

BEGIN_NAMED_ENUM_IN_INFO("", CAuthor_Base::, ERole, false)
{
    SET_ENUM_INTERNAL_NAME("Author", "role");
    SET_ENUM_MODULE("NCBI-Biblio");
    ADD_ENUM_VALUE("compiler", eRole_compiler);
    ADD_ENUM_VALUE("editor", eRole_editor);
    ADD_ENUM_VALUE("patent-assignee", eRole_patent_assignee);
    ADD_ENUM_VALUE("translator", eRole_translator);
}
END_ENUM_INFO

void CAuthor_Base::ResetName(void)
{
    if ( !m_Name ) {
        m_Name.Reset(new TName());
        return;
    }
    (*m_Name).Reset();
}

void CAuthor_Base::SetName(CAuthor_Base::TName& value)
{
    m_Name.Reset(&value);
}

void CAuthor_Base::ResetAffil(void)
{
    m_Affil.Reset();
}

void CAuthor_Base::SetAffil(CAuthor_Base::TAffil& value)
{
    m_Affil.Reset(&value);
}

CAuthor_Base::TAffil& CAuthor_Base::SetAffil(void)
{
    if ( !m_Affil )
        m_Affil.Reset(new ncbi::objects::CAffil());
    return (*m_Affil);
}

void CAuthor_Base::Reset(void)
{
    ResetName();
    ResetLevel();
    ResetRole();
    ResetAffil();
    ResetIs_corr();
}

BEGIN_NAMED_BASE_CLASS_INFO("Author", CAuthor)
{
    SET_CLASS_MODULE("NCBI-Biblio");
    ADD_NAMED_REF_MEMBER("name", m_Name, CPerson_id);
    ADD_NAMED_ENUM_MEMBER("level", m_Level, ELevel)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_ENUM_MEMBER("role", m_Role, ERole)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("affil", m_Affil, CAffil)->SetOptional();
    ADD_NAMED_STD_MEMBER("is-corr", m_Is_corr)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CAuthor_Base::CAuthor_Base(void)
    : m_Level((ELevel)(0)), m_Role((ERole)(0)), m_Is_corr(0)
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetName();
    }
}

// destructor
CAuthor_Base::~CAuthor_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

