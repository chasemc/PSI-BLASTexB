/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'mmdb3.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/mmdb3/Chem_graph_interaction.hpp>
#include <objects/mmdb3/Biostruc_molecule_pntr.hpp>
#include <objects/mmdb3/Chem_graph_pntrs.hpp>
#include <objects/mmdb3/RealValue.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CChem_graph_interaction_Base::, EType, true)
{
    SET_ENUM_INTERNAL_NAME("Chem-graph-interaction", "type");
    SET_ENUM_MODULE("MMDB-Features");
    ADD_ENUM_VALUE("protein-protein", eType_protein_protein);
    ADD_ENUM_VALUE("protein-dna", eType_protein_dna);
    ADD_ENUM_VALUE("protein-rna", eType_protein_rna);
    ADD_ENUM_VALUE("protein-chemical", eType_protein_chemical);
    ADD_ENUM_VALUE("dna-dna", eType_dna_dna);
    ADD_ENUM_VALUE("dna-rna", eType_dna_rna);
    ADD_ENUM_VALUE("dna-chemical", eType_dna_chemical);
    ADD_ENUM_VALUE("rna-rna", eType_rna_rna);
    ADD_ENUM_VALUE("rna-chemical", eType_rna_chemical);
    ADD_ENUM_VALUE("other", eType_other);
}
END_ENUM_INFO

void CChem_graph_interaction_Base::ResetDistance_threshold(void)
{
    m_Distance_threshold.Reset();
}

void CChem_graph_interaction_Base::SetDistance_threshold(CChem_graph_interaction_Base::TDistance_threshold& value)
{
    m_Distance_threshold.Reset(&value);
}

CChem_graph_interaction_Base::TDistance_threshold& CChem_graph_interaction_Base::SetDistance_threshold(void)
{
    if ( !m_Distance_threshold )
        m_Distance_threshold.Reset(new ncbi::objects::CRealValue());
    return (*m_Distance_threshold);
}

void CChem_graph_interaction_Base::ResetInteractors(void)
{
    m_Interactors.clear();
    m_set_State[0] &= ~0x30;
}

void CChem_graph_interaction_Base::ResetResidue_contacts(void)
{
    m_Residue_contacts.clear();
    m_set_State[0] &= ~0xc0;
}

void CChem_graph_interaction_Base::ResetAtom_contacts(void)
{
    m_Atom_contacts.clear();
    m_set_State[0] &= ~0x300;
}

void CChem_graph_interaction_Base::ResetAtom_distance(void)
{
    m_Atom_distance.clear();
    m_set_State[0] &= ~0xc00;
}

void CChem_graph_interaction_Base::Reset(void)
{
    ResetType();
    ResetDistance_threshold();
    ResetInteractors();
    ResetResidue_contacts();
    ResetAtom_contacts();
    ResetAtom_distance();
}

BEGIN_NAMED_BASE_CLASS_INFO("Chem-graph-interaction", CChem_graph_interaction)
{
    SET_CLASS_MODULE("MMDB-Features");
    ADD_NAMED_ENUM_MEMBER("type", m_Type, EType)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("distance-threshold", m_Distance_threshold, CRealValue)->SetOptional();
    ADD_NAMED_MEMBER("interactors", m_Interactors, STL_list, (STL_CRef, (CLASS, (CBiostruc_molecule_pntr))))->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_MEMBER("residue-contacts", m_Residue_contacts, STL_list, (STL_CRef, (CLASS, (CChem_graph_pntrs))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("atom-contacts", m_Atom_contacts, STL_list, (STL_CRef, (CLASS, (CChem_graph_pntrs))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("atom-distance", m_Atom_distance, STL_list, (STL_CRef, (CLASS, (CRealValue))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CChem_graph_interaction_Base::CChem_graph_interaction_Base(void)
    : m_Type((EType)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CChem_graph_interaction_Base::~CChem_graph_interaction_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

