/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'id2.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/id2/ID2_Request_Get_Seq_id.hpp>
#include <objects/id2/ID2_Seq_id.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CID2_Request_Get_Seq_id_Base::, ESeq_id_type, true)
{
    SET_ENUM_INTERNAL_NAME("ID2-Request-Get-Seq-id", "seq-id-type");
    SET_ENUM_MODULE("NCBI-ID2Access");
    ADD_ENUM_VALUE("any", eSeq_id_type_any);
    ADD_ENUM_VALUE("gi", eSeq_id_type_gi);
    ADD_ENUM_VALUE("text", eSeq_id_type_text);
    ADD_ENUM_VALUE("general", eSeq_id_type_general);
    ADD_ENUM_VALUE("all", eSeq_id_type_all);
    ADD_ENUM_VALUE("label", eSeq_id_type_label);
    ADD_ENUM_VALUE("taxid", eSeq_id_type_taxid);
    ADD_ENUM_VALUE("hash", eSeq_id_type_hash);
    ADD_ENUM_VALUE("seq-length", eSeq_id_type_seq_length);
    ADD_ENUM_VALUE("seq-mol", eSeq_id_type_seq_mol);
}
END_ENUM_INFO

void CID2_Request_Get_Seq_id_Base::ResetSeq_id(void)
{
    if ( !m_Seq_id ) {
        m_Seq_id.Reset(new TSeq_id());
        return;
    }
    (*m_Seq_id).Reset();
}

void CID2_Request_Get_Seq_id_Base::SetSeq_id(CID2_Request_Get_Seq_id_Base::TSeq_id& value)
{
    m_Seq_id.Reset(&value);
}

void CID2_Request_Get_Seq_id_Base::Reset(void)
{
    ResetSeq_id();
    ResetSeq_id_type();
}

BEGIN_NAMED_BASE_CLASS_INFO("ID2-Request-Get-Seq-id", CID2_Request_Get_Seq_id)
{
    SET_CLASS_MODULE("NCBI-ID2Access");
    ADD_NAMED_REF_MEMBER("seq-id", m_Seq_id, CID2_Seq_id);
    ADD_NAMED_ENUM_MEMBER("seq-id-type", m_Seq_id_type, ESeq_id_type)->SetDefault(new TSeq_id_type(eSeq_id_type_any))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CID2_Request_Get_Seq_id_Base::CID2_Request_Get_Seq_id_Base(void)
    : m_Seq_id_type(eSeq_id_type_any)
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetSeq_id();
    }
}

// destructor
CID2_Request_Get_Seq_id_Base::~CID2_Request_Get_Seq_id_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

