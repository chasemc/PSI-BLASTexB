/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'submit.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/submit/Submit_block.hpp>
#include <objects/biblio/Cit_sub.hpp>
#include <objects/general/Date.hpp>
#include <objects/submit/Contact_info.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CSubmit_block_Base::, ESubtype, true)
{
    SET_ENUM_INTERNAL_NAME("Submit-block", "subtype");
    SET_ENUM_MODULE("NCBI-Submit");
    ADD_ENUM_VALUE("new", eSubtype_new);
    ADD_ENUM_VALUE("update", eSubtype_update);
    ADD_ENUM_VALUE("revision", eSubtype_revision);
    ADD_ENUM_VALUE("other", eSubtype_other);
}
END_ENUM_INFO

void CSubmit_block_Base::ResetContact(void)
{
    if ( !m_Contact ) {
        m_Contact.Reset(new TContact());
        return;
    }
    (*m_Contact).Reset();
}

void CSubmit_block_Base::SetContact(CSubmit_block_Base::TContact& value)
{
    m_Contact.Reset(&value);
}

void CSubmit_block_Base::ResetCit(void)
{
    if ( !m_Cit ) {
        m_Cit.Reset(new TCit());
        return;
    }
    (*m_Cit).Reset();
}

void CSubmit_block_Base::SetCit(CSubmit_block_Base::TCit& value)
{
    m_Cit.Reset(&value);
}

void CSubmit_block_Base::ResetReldate(void)
{
    m_Reldate.Reset();
}

void CSubmit_block_Base::SetReldate(CSubmit_block_Base::TReldate& value)
{
    m_Reldate.Reset(&value);
}

CSubmit_block_Base::TReldate& CSubmit_block_Base::SetReldate(void)
{
    if ( !m_Reldate )
        m_Reldate.Reset(new ncbi::objects::CDate());
    return (*m_Reldate);
}

void CSubmit_block_Base::ResetTool(void)
{
    m_Tool.erase();
    m_set_State[0] &= ~0xc00;
}

void CSubmit_block_Base::ResetUser_tag(void)
{
    m_User_tag.erase();
    m_set_State[0] &= ~0x3000;
}

void CSubmit_block_Base::ResetComment(void)
{
    m_Comment.erase();
    m_set_State[0] &= ~0xc000;
}

void CSubmit_block_Base::Reset(void)
{
    ResetContact();
    ResetCit();
    ResetHup();
    ResetReldate();
    ResetSubtype();
    ResetTool();
    ResetUser_tag();
    ResetComment();
}

BEGIN_NAMED_BASE_CLASS_INFO("Submit-block", CSubmit_block)
{
    SET_CLASS_MODULE("NCBI-Submit");
    ADD_NAMED_REF_MEMBER("contact", m_Contact, CContact_info);
    ADD_NAMED_REF_MEMBER("cit", m_Cit, CCit_sub);
    ADD_NAMED_STD_MEMBER("hup", m_Hup)->SetDefault(new THup(false))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("reldate", m_Reldate, CDate)->SetOptional();
    ADD_NAMED_ENUM_MEMBER("subtype", m_Subtype, ESubtype)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("tool", m_Tool)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("user-tag", m_User_tag)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("comment", m_Comment)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CSubmit_block_Base::CSubmit_block_Base(void)
    : m_Hup(false), m_Subtype((ESubtype)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetContact();
        ResetCit();
    }
}

// destructor
CSubmit_block_Base::~CSubmit_block_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

