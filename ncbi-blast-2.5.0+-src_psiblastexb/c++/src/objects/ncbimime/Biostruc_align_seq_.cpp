/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'ncbimime.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/ncbimime/Biostruc_align_seq.hpp>
#include <objects/cn3d/Cn3d_style_dictionary.hpp>
#include <objects/cn3d/Cn3d_user_annotations.hpp>
#include <objects/seq/Seq_annot.hpp>
#include <objects/seqset/Seq_entry.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CBiostruc_align_seq_Base::ResetSequences(void)
{
    m_Sequences.clear();
    m_set_State[0] &= ~0x3;
}

void CBiostruc_align_seq_Base::ResetSeqalign(void)
{
    m_Seqalign.clear();
    m_set_State[0] &= ~0xc;
}

void CBiostruc_align_seq_Base::ResetStyle_dictionary(void)
{
    m_Style_dictionary.Reset();
}

void CBiostruc_align_seq_Base::SetStyle_dictionary(CBiostruc_align_seq_Base::TStyle_dictionary& value)
{
    m_Style_dictionary.Reset(&value);
}

CBiostruc_align_seq_Base::TStyle_dictionary& CBiostruc_align_seq_Base::SetStyle_dictionary(void)
{
    if ( !m_Style_dictionary )
        m_Style_dictionary.Reset(new ncbi::objects::CCn3d_style_dictionary());
    return (*m_Style_dictionary);
}

void CBiostruc_align_seq_Base::ResetUser_annotations(void)
{
    m_User_annotations.Reset();
}

void CBiostruc_align_seq_Base::SetUser_annotations(CBiostruc_align_seq_Base::TUser_annotations& value)
{
    m_User_annotations.Reset(&value);
}

CBiostruc_align_seq_Base::TUser_annotations& CBiostruc_align_seq_Base::SetUser_annotations(void)
{
    if ( !m_User_annotations )
        m_User_annotations.Reset(new ncbi::objects::CCn3d_user_annotations());
    return (*m_User_annotations);
}

void CBiostruc_align_seq_Base::Reset(void)
{
    ResetSequences();
    ResetSeqalign();
    ResetStyle_dictionary();
    ResetUser_annotations();
}

BEGIN_NAMED_BASE_CLASS_INFO("Biostruc-align-seq", CBiostruc_align_seq)
{
    SET_CLASS_MODULE("NCBI-Mime");
    ADD_NAMED_MEMBER("sequences", m_Sequences, STL_list_set, (STL_CRef, (CLASS, (CSeq_entry))))->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_MEMBER("seqalign", m_Seqalign, STL_list_set, (STL_CRef, (CLASS, (CSeq_annot))))->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("style-dictionary", m_Style_dictionary, CCn3d_style_dictionary)->SetOptional();
    ADD_NAMED_REF_MEMBER("user-annotations", m_User_annotations, CCn3d_user_annotations)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CBiostruc_align_seq_Base::CBiostruc_align_seq_Base(void)
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CBiostruc_align_seq_Base::~CBiostruc_align_seq_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

