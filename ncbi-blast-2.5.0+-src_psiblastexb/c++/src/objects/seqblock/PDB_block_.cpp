/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'seqblock.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/seqblock/PDB_block.hpp>
#include <objects/general/Date.hpp>
#include <objects/seqblock/PDB_replace.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CPDB_block_Base::ResetDeposition(void)
{
    if ( !m_Deposition ) {
        m_Deposition.Reset(new TDeposition());
        return;
    }
    (*m_Deposition).Reset();
}

void CPDB_block_Base::SetDeposition(CPDB_block_Base::TDeposition& value)
{
    m_Deposition.Reset(&value);
}

void CPDB_block_Base::ResetClass(void)
{
    m_Class.erase();
    m_set_State[0] &= ~0xc;
}

void CPDB_block_Base::ResetCompound(void)
{
    m_Compound.clear();
    m_set_State[0] &= ~0x30;
}

void CPDB_block_Base::ResetSource(void)
{
    m_Source.clear();
    m_set_State[0] &= ~0xc0;
}

void CPDB_block_Base::ResetExp_method(void)
{
    m_Exp_method.erase();
    m_set_State[0] &= ~0x300;
}

void CPDB_block_Base::ResetReplace(void)
{
    m_Replace.Reset();
}

void CPDB_block_Base::SetReplace(CPDB_block_Base::TReplace& value)
{
    m_Replace.Reset(&value);
}

CPDB_block_Base::TReplace& CPDB_block_Base::SetReplace(void)
{
    if ( !m_Replace )
        m_Replace.Reset(new ncbi::objects::CPDB_replace());
    return (*m_Replace);
}

void CPDB_block_Base::Reset(void)
{
    ResetDeposition();
    ResetClass();
    ResetCompound();
    ResetSource();
    ResetExp_method();
    ResetReplace();
}

BEGIN_NAMED_BASE_CLASS_INFO("PDB-block", CPDB_block)
{
    SET_CLASS_MODULE("PDB-General");
    ADD_NAMED_REF_MEMBER("deposition", m_Deposition, CDate);
    ADD_NAMED_STD_MEMBER("class", m_Class)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_MEMBER("compound", m_Compound, STL_list, (STD, (string)))->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_MEMBER("source", m_Source, STL_list, (STD, (string)))->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("exp-method", m_Exp_method)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("replace", m_Replace, CPDB_replace)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CPDB_block_Base::CPDB_block_Base(void)
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetDeposition();
    }
}

// destructor
CPDB_block_Base::~CPDB_block_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

