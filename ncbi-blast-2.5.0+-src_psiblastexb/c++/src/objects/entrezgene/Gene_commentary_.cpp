/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'entrezgene.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/entrezgene/Gene_commentary.hpp>
#include <objects/entrezgene/Other_source.hpp>
#include <objects/entrezgene/Xtra_Terms.hpp>
#include <objects/general/Date.hpp>
#include <objects/pub/Pub.hpp>
#include <objects/seqfeat/RNA_ref.hpp>
#include <objects/seqloc/Seq_loc.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CGene_commentary_Base::, EType, true)
{
    SET_ENUM_INTERNAL_NAME("Gene-commentary", "type");
    SET_ENUM_MODULE("NCBI-Entrezgene");
    ADD_ENUM_VALUE("genomic", eType_genomic);
    ADD_ENUM_VALUE("pre-RNA", eType_pre_RNA);
    ADD_ENUM_VALUE("mRNA", eType_mRNA);
    ADD_ENUM_VALUE("rRNA", eType_rRNA);
    ADD_ENUM_VALUE("tRNA", eType_tRNA);
    ADD_ENUM_VALUE("snRNA", eType_snRNA);
    ADD_ENUM_VALUE("scRNA", eType_scRNA);
    ADD_ENUM_VALUE("peptide", eType_peptide);
    ADD_ENUM_VALUE("other-genetic", eType_other_genetic);
    ADD_ENUM_VALUE("genomic-mRNA", eType_genomic_mRNA);
    ADD_ENUM_VALUE("cRNA", eType_cRNA);
    ADD_ENUM_VALUE("mature-peptide", eType_mature_peptide);
    ADD_ENUM_VALUE("pre-protein", eType_pre_protein);
    ADD_ENUM_VALUE("miscRNA", eType_miscRNA);
    ADD_ENUM_VALUE("snoRNA", eType_snoRNA);
    ADD_ENUM_VALUE("property", eType_property);
    ADD_ENUM_VALUE("reference", eType_reference);
    ADD_ENUM_VALUE("generif", eType_generif);
    ADD_ENUM_VALUE("phenotype", eType_phenotype);
    ADD_ENUM_VALUE("complex", eType_complex);
    ADD_ENUM_VALUE("compound", eType_compound);
    ADD_ENUM_VALUE("ncRNA", eType_ncRNA);
    ADD_ENUM_VALUE("gene-group", eType_gene_group);
    ADD_ENUM_VALUE("assembly", eType_assembly);
    ADD_ENUM_VALUE("assembly-unit", eType_assembly_unit);
    ADD_ENUM_VALUE("comment", eType_comment);
    ADD_ENUM_VALUE("other", eType_other);
}
END_ENUM_INFO

void CGene_commentary_Base::ResetHeading(void)
{
    m_Heading.erase();
    m_set_State[0] &= ~0xc;
}

void CGene_commentary_Base::ResetLabel(void)
{
    m_Label.erase();
    m_set_State[0] &= ~0x30;
}

void CGene_commentary_Base::ResetText(void)
{
    m_Text.erase();
    m_set_State[0] &= ~0xc0;
}

void CGene_commentary_Base::ResetAccession(void)
{
    m_Accession.erase();
    m_set_State[0] &= ~0x300;
}

void CGene_commentary_Base::ResetXtra_properties(void)
{
    m_Xtra_properties.clear();
    m_set_State[0] &= ~0x3000;
}

void CGene_commentary_Base::ResetRefs(void)
{
    m_Refs.clear();
    m_set_State[0] &= ~0xc000;
}

void CGene_commentary_Base::ResetSource(void)
{
    m_Source.clear();
    m_set_State[0] &= ~0x30000;
}

void CGene_commentary_Base::ResetGenomic_coords(void)
{
    m_Genomic_coords.clear();
    m_set_State[0] &= ~0xc0000;
}

void CGene_commentary_Base::ResetSeqs(void)
{
    m_Seqs.clear();
    m_set_State[0] &= ~0x300000;
}

void CGene_commentary_Base::ResetProducts(void)
{
    m_Products.clear();
    m_set_State[0] &= ~0xc00000;
}

void CGene_commentary_Base::ResetProperties(void)
{
    m_Properties.clear();
    m_set_State[0] &= ~0x3000000;
}

void CGene_commentary_Base::ResetComment(void)
{
    m_Comment.clear();
    m_set_State[0] &= ~0xc000000;
}

void CGene_commentary_Base::ResetCreate_date(void)
{
    m_Create_date.Reset();
}

void CGene_commentary_Base::SetCreate_date(CGene_commentary_Base::TCreate_date& value)
{
    m_Create_date.Reset(&value);
}

CGene_commentary_Base::TCreate_date& CGene_commentary_Base::SetCreate_date(void)
{
    if ( !m_Create_date )
        m_Create_date.Reset(new ncbi::objects::CDate());
    return (*m_Create_date);
}

void CGene_commentary_Base::ResetUpdate_date(void)
{
    m_Update_date.Reset();
}

void CGene_commentary_Base::SetUpdate_date(CGene_commentary_Base::TUpdate_date& value)
{
    m_Update_date.Reset(&value);
}

CGene_commentary_Base::TUpdate_date& CGene_commentary_Base::SetUpdate_date(void)
{
    if ( !m_Update_date )
        m_Update_date.Reset(new ncbi::objects::CDate());
    return (*m_Update_date);
}

void CGene_commentary_Base::ResetRna(void)
{
    m_Rna.Reset();
}

void CGene_commentary_Base::SetRna(CGene_commentary_Base::TRna& value)
{
    m_Rna.Reset(&value);
}

CGene_commentary_Base::TRna& CGene_commentary_Base::SetRna(void)
{
    if ( !m_Rna )
        m_Rna.Reset(new ncbi::objects::CRNA_ref());
    return (*m_Rna);
}

void CGene_commentary_Base::Reset(void)
{
    ResetType();
    ResetHeading();
    ResetLabel();
    ResetText();
    ResetAccession();
    ResetVersion();
    ResetXtra_properties();
    ResetRefs();
    ResetSource();
    ResetGenomic_coords();
    ResetSeqs();
    ResetProducts();
    ResetProperties();
    ResetComment();
    ResetCreate_date();
    ResetUpdate_date();
    ResetRna();
}

BEGIN_NAMED_BASE_CLASS_INFO("Gene-commentary", CGene_commentary)
{
    SET_CLASS_MODULE("NCBI-Entrezgene");
    ADD_NAMED_ENUM_MEMBER("type", m_Type, EType)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("heading", m_Heading)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("label", m_Label)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("text", m_Text)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("accession", m_Accession)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("version", m_Version)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("xtra-properties", m_Xtra_properties, STL_list, (STL_CRef, (CLASS, (CXtra_Terms))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("refs", m_Refs, STL_list, (STL_CRef, (CLASS, (CPub))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("source", m_Source, STL_list, (STL_CRef, (CLASS, (COther_source))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("genomic-coords", m_Genomic_coords, STL_list, (STL_CRef, (CLASS, (CSeq_loc))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("seqs", m_Seqs, STL_list, (STL_CRef, (CLASS, (CSeq_loc))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("products", m_Products, STL_list, (STL_CRef, (CLASS, (CGene_commentary))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("properties", m_Properties, STL_list, (STL_CRef, (CLASS, (CGene_commentary))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_MEMBER("comment", m_Comment, STL_list, (STL_CRef, (CLASS, (CGene_commentary))))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("create-date", m_Create_date, CDate)->SetOptional();
    ADD_NAMED_REF_MEMBER("update-date", m_Update_date, CDate)->SetOptional();
    ADD_NAMED_REF_MEMBER("rna", m_Rna, CRNA_ref)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CGene_commentary_Base::CGene_commentary_Base(void)
    : m_Type((EType)(0)), m_Version(0)
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CGene_commentary_Base::~CGene_commentary_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

