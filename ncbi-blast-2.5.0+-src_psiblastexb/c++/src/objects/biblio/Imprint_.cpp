/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'biblio.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/biblio/Imprint.hpp>
#include <objects/biblio/Affil.hpp>
#include <objects/biblio/CitRetract.hpp>
#include <objects/biblio/PubStatusDateSet.hpp>
#include <objects/general/Date.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CImprint_Base::, EPrepub, false)
{
    SET_ENUM_INTERNAL_NAME("Imprint", "prepub");
    SET_ENUM_MODULE("NCBI-Biblio");
    ADD_ENUM_VALUE("submitted", ePrepub_submitted);
    ADD_ENUM_VALUE("in-press", ePrepub_in_press);
    ADD_ENUM_VALUE("other", ePrepub_other);
}
END_ENUM_INFO

void CImprint_Base::ResetDate(void)
{
    if ( !m_Date ) {
        m_Date.Reset(new TDate());
        return;
    }
    (*m_Date).Reset();
}

void CImprint_Base::SetDate(CImprint_Base::TDate& value)
{
    m_Date.Reset(&value);
}

void CImprint_Base::ResetVolume(void)
{
    m_Volume.erase();
    m_set_State[0] &= ~0xc;
}

void CImprint_Base::ResetIssue(void)
{
    m_Issue.erase();
    m_set_State[0] &= ~0x30;
}

void CImprint_Base::ResetPages(void)
{
    m_Pages.erase();
    m_set_State[0] &= ~0xc0;
}

void CImprint_Base::ResetSection(void)
{
    m_Section.erase();
    m_set_State[0] &= ~0x300;
}

void CImprint_Base::ResetPub(void)
{
    m_Pub.Reset();
}

void CImprint_Base::SetPub(CImprint_Base::TPub& value)
{
    m_Pub.Reset(&value);
}

CImprint_Base::TPub& CImprint_Base::SetPub(void)
{
    if ( !m_Pub )
        m_Pub.Reset(new ncbi::objects::CAffil());
    return (*m_Pub);
}

void CImprint_Base::ResetCprt(void)
{
    m_Cprt.Reset();
}

void CImprint_Base::SetCprt(CImprint_Base::TCprt& value)
{
    m_Cprt.Reset(&value);
}

CImprint_Base::TCprt& CImprint_Base::SetCprt(void)
{
    if ( !m_Cprt )
        m_Cprt.Reset(new ncbi::objects::CDate());
    return (*m_Cprt);
}

void CImprint_Base::ResetPart_sup(void)
{
    m_Part_sup.erase();
    m_set_State[0] &= ~0xc000;
}

void CImprint_Base::ResetPart_supi(void)
{
    m_Part_supi.erase();
    m_set_State[0] &= ~0x300000;
}

void CImprint_Base::ResetRetract(void)
{
    m_Retract.Reset();
}

void CImprint_Base::SetRetract(CImprint_Base::TRetract& value)
{
    m_Retract.Reset(&value);
}

CImprint_Base::TRetract& CImprint_Base::SetRetract(void)
{
    if ( !m_Retract )
        m_Retract.Reset(new ncbi::objects::CCitRetract());
    return (*m_Retract);
}

void CImprint_Base::ResetHistory(void)
{
    m_History.Reset();
}

void CImprint_Base::SetHistory(CImprint_Base::THistory& value)
{
    m_History.Reset(&value);
}

CImprint_Base::THistory& CImprint_Base::SetHistory(void)
{
    if ( !m_History )
        m_History.Reset(new ncbi::objects::CPubStatusDateSet());
    return (*m_History);
}

void CImprint_Base::Reset(void)
{
    ResetDate();
    ResetVolume();
    ResetIssue();
    ResetPages();
    ResetSection();
    ResetPub();
    ResetCprt();
    ResetPart_sup();
    ResetLanguage();
    ResetPrepub();
    ResetPart_supi();
    ResetRetract();
    ResetPubstatus();
    ResetHistory();
}

BEGIN_NAMED_BASE_CLASS_INFO("Imprint", CImprint)
{
    SET_CLASS_MODULE("NCBI-Biblio");
    ADD_NAMED_REF_MEMBER("date", m_Date, CDate);
    ADD_NAMED_STD_MEMBER("volume", m_Volume)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("issue", m_Issue)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("pages", m_Pages)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("section", m_Section)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("pub", m_Pub, CAffil)->SetOptional();
    ADD_NAMED_REF_MEMBER("cprt", m_Cprt, CDate)->SetOptional();
    ADD_NAMED_STD_MEMBER("part-sup", m_Part_sup)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("language", m_Language)->SetDefault(new TLanguage("ENG"))->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_ENUM_MEMBER("prepub", m_Prepub, EPrepub)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_STD_MEMBER("part-supi", m_Part_supi)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("retract", m_Retract, CCitRetract)->SetOptional();
    ADD_NAMED_ENUM_MEMBER("pubstatus", m_Pubstatus, EPubStatus)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetOptional();
    ADD_NAMED_REF_MEMBER("history", m_History, CPubStatusDateSet)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CImprint_Base::CImprint_Base(void)
    : m_Language("ENG"), m_Prepub((EPrepub)(0)), m_Pubstatus((int)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetDate();
    }
}

// destructor
CImprint_Base::~CImprint_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

