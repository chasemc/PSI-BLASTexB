/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'seqtable.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/seqtable/SeqTable_column.hpp>
#include <objects/seqtable/SeqTable_column_info.hpp>
#include <objects/seqtable/SeqTable_multi_data.hpp>
#include <objects/seqtable/SeqTable_single_data.hpp>
#include <objects/seqtable/SeqTable_sparse_index.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CSeqTable_column_Base::ResetHeader(void)
{
    if ( !m_Header ) {
        m_Header.Reset(new THeader());
        return;
    }
    (*m_Header).Reset();
}

void CSeqTable_column_Base::SetHeader(CSeqTable_column_Base::THeader& value)
{
    m_Header.Reset(&value);
}

void CSeqTable_column_Base::ResetData(void)
{
    m_Data.Reset();
}

void CSeqTable_column_Base::SetData(CSeqTable_column_Base::TData& value)
{
    m_Data.Reset(&value);
}

CSeqTable_column_Base::TData& CSeqTable_column_Base::SetData(void)
{
    if ( !m_Data )
        m_Data.Reset(new ncbi::objects::CSeqTable_multi_data());
    return (*m_Data);
}

void CSeqTable_column_Base::ResetSparse(void)
{
    m_Sparse.Reset();
}

void CSeqTable_column_Base::SetSparse(CSeqTable_column_Base::TSparse& value)
{
    m_Sparse.Reset(&value);
}

CSeqTable_column_Base::TSparse& CSeqTable_column_Base::SetSparse(void)
{
    if ( !m_Sparse )
        m_Sparse.Reset(new ncbi::objects::CSeqTable_sparse_index());
    return (*m_Sparse);
}

void CSeqTable_column_Base::ResetDefault(void)
{
    m_Default.Reset();
}

void CSeqTable_column_Base::SetDefault(CSeqTable_column_Base::TDefault& value)
{
    m_Default.Reset(&value);
}

CSeqTable_column_Base::TDefault& CSeqTable_column_Base::SetDefault(void)
{
    if ( !m_Default )
        m_Default.Reset(new ncbi::objects::CSeqTable_single_data());
    return (*m_Default);
}

void CSeqTable_column_Base::ResetSparse_other(void)
{
    m_Sparse_other.Reset();
}

void CSeqTable_column_Base::SetSparse_other(CSeqTable_column_Base::TSparse_other& value)
{
    m_Sparse_other.Reset(&value);
}

CSeqTable_column_Base::TSparse_other& CSeqTable_column_Base::SetSparse_other(void)
{
    if ( !m_Sparse_other )
        m_Sparse_other.Reset(new ncbi::objects::CSeqTable_single_data());
    return (*m_Sparse_other);
}

void CSeqTable_column_Base::Reset(void)
{
    ResetHeader();
    ResetData();
    ResetSparse();
    ResetDefault();
    ResetSparse_other();
}

BEGIN_NAMED_BASE_CLASS_INFO("SeqTable-column", CSeqTable_column)
{
    SET_CLASS_MODULE("NCBI-SeqTable");
    ADD_NAMED_REF_MEMBER("header", m_Header, CSeqTable_column_info);
    ADD_NAMED_REF_MEMBER("data", m_Data, CSeqTable_multi_data)->SetOptional();
    ADD_NAMED_REF_MEMBER("sparse", m_Sparse, CSeqTable_sparse_index)->SetOptional();
    ADD_NAMED_REF_MEMBER("default", m_Default, CSeqTable_single_data)->SetOptional();
    ADD_NAMED_REF_MEMBER("sparse-other", m_Sparse_other, CSeqTable_single_data)->SetOptional();
    info->RandomOrder();
    info->CodeVersion(21600);
}
END_CLASS_INFO

// constructor
CSeqTable_column_Base::CSeqTable_column_Base(void)
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetHeader();
    }
}

// destructor
CSeqTable_column_Base::~CSeqTable_column_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

