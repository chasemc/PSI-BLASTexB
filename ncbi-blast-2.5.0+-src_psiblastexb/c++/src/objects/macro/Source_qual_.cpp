/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'macro.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/macro/Source_qual.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_INFO("Source-qual", ESource_qual, false)
{
    SET_ENUM_MODULE("NCBI-Macro");
    ADD_ENUM_VALUE("acronym", eSource_qual_acronym);
    ADD_ENUM_VALUE("anamorph", eSource_qual_anamorph);
    ADD_ENUM_VALUE("authority", eSource_qual_authority);
    ADD_ENUM_VALUE("bio-material", eSource_qual_bio_material);
    ADD_ENUM_VALUE("biotype", eSource_qual_biotype);
    ADD_ENUM_VALUE("biovar", eSource_qual_biovar);
    ADD_ENUM_VALUE("breed", eSource_qual_breed);
    ADD_ENUM_VALUE("cell-line", eSource_qual_cell_line);
    ADD_ENUM_VALUE("cell-type", eSource_qual_cell_type);
    ADD_ENUM_VALUE("chemovar", eSource_qual_chemovar);
    ADD_ENUM_VALUE("chromosome", eSource_qual_chromosome);
    ADD_ENUM_VALUE("clone", eSource_qual_clone);
    ADD_ENUM_VALUE("clone-lib", eSource_qual_clone_lib);
    ADD_ENUM_VALUE("collected-by", eSource_qual_collected_by);
    ADD_ENUM_VALUE("collection-date", eSource_qual_collection_date);
    ADD_ENUM_VALUE("common", eSource_qual_common);
    ADD_ENUM_VALUE("common-name", eSource_qual_common_name);
    ADD_ENUM_VALUE("country", eSource_qual_country);
    ADD_ENUM_VALUE("cultivar", eSource_qual_cultivar);
    ADD_ENUM_VALUE("culture-collection", eSource_qual_culture_collection);
    ADD_ENUM_VALUE("dev-stage", eSource_qual_dev_stage);
    ADD_ENUM_VALUE("division", eSource_qual_division);
    ADD_ENUM_VALUE("dosage", eSource_qual_dosage);
    ADD_ENUM_VALUE("ecotype", eSource_qual_ecotype);
    ADD_ENUM_VALUE("endogenous-virus-name", eSource_qual_endogenous_virus_name);
    ADD_ENUM_VALUE("environmental-sample", eSource_qual_environmental_sample);
    ADD_ENUM_VALUE("forma", eSource_qual_forma);
    ADD_ENUM_VALUE("forma-specialis", eSource_qual_forma_specialis);
    ADD_ENUM_VALUE("frequency", eSource_qual_frequency);
    ADD_ENUM_VALUE("fwd-primer-name", eSource_qual_fwd_primer_name);
    ADD_ENUM_VALUE("fwd-primer-seq", eSource_qual_fwd_primer_seq);
    ADD_ENUM_VALUE("gb-acronym", eSource_qual_gb_acronym);
    ADD_ENUM_VALUE("gb-anamorph", eSource_qual_gb_anamorph);
    ADD_ENUM_VALUE("gb-synonym", eSource_qual_gb_synonym);
    ADD_ENUM_VALUE("genotype", eSource_qual_genotype);
    ADD_ENUM_VALUE("germline", eSource_qual_germline);
    ADD_ENUM_VALUE("group", eSource_qual_group);
    ADD_ENUM_VALUE("haplotype", eSource_qual_haplotype);
    ADD_ENUM_VALUE("identified-by", eSource_qual_identified_by);
    ADD_ENUM_VALUE("insertion-seq-name", eSource_qual_insertion_seq_name);
    ADD_ENUM_VALUE("isolate", eSource_qual_isolate);
    ADD_ENUM_VALUE("isolation-source", eSource_qual_isolation_source);
    ADD_ENUM_VALUE("lab-host", eSource_qual_lab_host);
    ADD_ENUM_VALUE("lat-lon", eSource_qual_lat_lon);
    ADD_ENUM_VALUE("lineage", eSource_qual_lineage);
    ADD_ENUM_VALUE("map", eSource_qual_map);
    ADD_ENUM_VALUE("metagenome-source", eSource_qual_metagenome_source);
    ADD_ENUM_VALUE("metagenomic", eSource_qual_metagenomic);
    ADD_ENUM_VALUE("old-lineage", eSource_qual_old_lineage);
    ADD_ENUM_VALUE("old-name", eSource_qual_old_name);
    ADD_ENUM_VALUE("orgmod-note", eSource_qual_orgmod_note);
    ADD_ENUM_VALUE("nat-host", eSource_qual_nat_host);
    ADD_ENUM_VALUE("pathovar", eSource_qual_pathovar);
    ADD_ENUM_VALUE("plasmid-name", eSource_qual_plasmid_name);
    ADD_ENUM_VALUE("plastid-name", eSource_qual_plastid_name);
    ADD_ENUM_VALUE("pop-variant", eSource_qual_pop_variant);
    ADD_ENUM_VALUE("rearranged", eSource_qual_rearranged);
    ADD_ENUM_VALUE("rev-primer-name", eSource_qual_rev_primer_name);
    ADD_ENUM_VALUE("rev-primer-seq", eSource_qual_rev_primer_seq);
    ADD_ENUM_VALUE("segment", eSource_qual_segment);
    ADD_ENUM_VALUE("serogroup", eSource_qual_serogroup);
    ADD_ENUM_VALUE("serotype", eSource_qual_serotype);
    ADD_ENUM_VALUE("serovar", eSource_qual_serovar);
    ADD_ENUM_VALUE("sex", eSource_qual_sex);
    ADD_ENUM_VALUE("specimen-voucher", eSource_qual_specimen_voucher);
    ADD_ENUM_VALUE("strain", eSource_qual_strain);
    ADD_ENUM_VALUE("subclone", eSource_qual_subclone);
    ADD_ENUM_VALUE("subgroup", eSource_qual_subgroup);
    ADD_ENUM_VALUE("subsource-note", eSource_qual_subsource_note);
    ADD_ENUM_VALUE("sub-species", eSource_qual_sub_species);
    ADD_ENUM_VALUE("substrain", eSource_qual_substrain);
    ADD_ENUM_VALUE("subtype", eSource_qual_subtype);
    ADD_ENUM_VALUE("synonym", eSource_qual_synonym);
    ADD_ENUM_VALUE("taxname", eSource_qual_taxname);
    ADD_ENUM_VALUE("teleomorph", eSource_qual_teleomorph);
    ADD_ENUM_VALUE("tissue-lib", eSource_qual_tissue_lib);
    ADD_ENUM_VALUE("tissue-type", eSource_qual_tissue_type);
    ADD_ENUM_VALUE("transgenic", eSource_qual_transgenic);
    ADD_ENUM_VALUE("transposon-name", eSource_qual_transposon_name);
    ADD_ENUM_VALUE("type", eSource_qual_type);
    ADD_ENUM_VALUE("variety", eSource_qual_variety);
    ADD_ENUM_VALUE("specimen-voucher-INST", eSource_qual_specimen_voucher_INST);
    ADD_ENUM_VALUE("specimen-voucher-COLL", eSource_qual_specimen_voucher_COLL);
    ADD_ENUM_VALUE("specimen-voucher-SpecID", eSource_qual_specimen_voucher_SpecID);
    ADD_ENUM_VALUE("culture-collection-INST", eSource_qual_culture_collection_INST);
    ADD_ENUM_VALUE("culture-collection-COLL", eSource_qual_culture_collection_COLL);
    ADD_ENUM_VALUE("culture-collection-SpecID", eSource_qual_culture_collection_SpecID);
    ADD_ENUM_VALUE("bio-material-INST", eSource_qual_bio_material_INST);
    ADD_ENUM_VALUE("bio-material-COLL", eSource_qual_bio_material_COLL);
    ADD_ENUM_VALUE("bio-material-SpecID", eSource_qual_bio_material_SpecID);
    ADD_ENUM_VALUE("all-notes", eSource_qual_all_notes);
    ADD_ENUM_VALUE("mating-type", eSource_qual_mating_type);
    ADD_ENUM_VALUE("linkage-group", eSource_qual_linkage_group);
    ADD_ENUM_VALUE("haplogroup", eSource_qual_haplogroup);
    ADD_ENUM_VALUE("all-quals", eSource_qual_all_quals);
    ADD_ENUM_VALUE("dbxref", eSource_qual_dbxref);
    ADD_ENUM_VALUE("taxid", eSource_qual_taxid);
    ADD_ENUM_VALUE("all-primers", eSource_qual_all_primers);
    ADD_ENUM_VALUE("altitude", eSource_qual_altitude);
    ADD_ENUM_VALUE("type-material", eSource_qual_type_material);
}
END_ENUM_INFO


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

