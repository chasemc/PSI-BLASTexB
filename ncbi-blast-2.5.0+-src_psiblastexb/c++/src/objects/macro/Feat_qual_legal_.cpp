/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'macro.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/macro/Feat_qual_legal.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_INFO("Feat-qual-legal", EFeat_qual_legal, false)
{
    SET_ENUM_MODULE("NCBI-Macro");
    ADD_ENUM_VALUE("allele", eFeat_qual_legal_allele);
    ADD_ENUM_VALUE("activity", eFeat_qual_legal_activity);
    ADD_ENUM_VALUE("anticodon", eFeat_qual_legal_anticodon);
    ADD_ENUM_VALUE("bound-moiety", eFeat_qual_legal_bound_moiety);
    ADD_ENUM_VALUE("chromosome", eFeat_qual_legal_chromosome);
    ADD_ENUM_VALUE("citation", eFeat_qual_legal_citation);
    ADD_ENUM_VALUE("codon", eFeat_qual_legal_codon);
    ADD_ENUM_VALUE("codon-start", eFeat_qual_legal_codon_start);
    ADD_ENUM_VALUE("codons-recognized", eFeat_qual_legal_codons_recognized);
    ADD_ENUM_VALUE("compare", eFeat_qual_legal_compare);
    ADD_ENUM_VALUE("cons-splice", eFeat_qual_legal_cons_splice);
    ADD_ENUM_VALUE("db-xref", eFeat_qual_legal_db_xref);
    ADD_ENUM_VALUE("description", eFeat_qual_legal_description);
    ADD_ENUM_VALUE("direction", eFeat_qual_legal_direction);
    ADD_ENUM_VALUE("ec-number", eFeat_qual_legal_ec_number);
    ADD_ENUM_VALUE("environmental-sample", eFeat_qual_legal_environmental_sample);
    ADD_ENUM_VALUE("evidence", eFeat_qual_legal_evidence);
    ADD_ENUM_VALUE("exception", eFeat_qual_legal_exception);
    ADD_ENUM_VALUE("experiment", eFeat_qual_legal_experiment);
    ADD_ENUM_VALUE("focus", eFeat_qual_legal_focus);
    ADD_ENUM_VALUE("frequency", eFeat_qual_legal_frequency);
    ADD_ENUM_VALUE("function", eFeat_qual_legal_function);
    ADD_ENUM_VALUE("gene", eFeat_qual_legal_gene);
    ADD_ENUM_VALUE("gene-description", eFeat_qual_legal_gene_description);
    ADD_ENUM_VALUE("inference", eFeat_qual_legal_inference);
    ADD_ENUM_VALUE("label", eFeat_qual_legal_label);
    ADD_ENUM_VALUE("locus-tag", eFeat_qual_legal_locus_tag);
    ADD_ENUM_VALUE("map", eFeat_qual_legal_map);
    ADD_ENUM_VALUE("mobile-element", eFeat_qual_legal_mobile_element);
    ADD_ENUM_VALUE("mod-base", eFeat_qual_legal_mod_base);
    ADD_ENUM_VALUE("mol-type", eFeat_qual_legal_mol_type);
    ADD_ENUM_VALUE("ncRNA-class", eFeat_qual_legal_ncRNA_class);
    ADD_ENUM_VALUE("note", eFeat_qual_legal_note);
    ADD_ENUM_VALUE("number", eFeat_qual_legal_number);
    ADD_ENUM_VALUE("old-locus-tag", eFeat_qual_legal_old_locus_tag);
    ADD_ENUM_VALUE("operon", eFeat_qual_legal_operon);
    ADD_ENUM_VALUE("organism", eFeat_qual_legal_organism);
    ADD_ENUM_VALUE("organelle", eFeat_qual_legal_organelle);
    ADD_ENUM_VALUE("partial", eFeat_qual_legal_partial);
    ADD_ENUM_VALUE("phenotype", eFeat_qual_legal_phenotype);
    ADD_ENUM_VALUE("plasmid", eFeat_qual_legal_plasmid);
    ADD_ENUM_VALUE("product", eFeat_qual_legal_product);
    ADD_ENUM_VALUE("protein-id", eFeat_qual_legal_protein_id);
    ADD_ENUM_VALUE("pseudo", eFeat_qual_legal_pseudo);
    ADD_ENUM_VALUE("rearranged", eFeat_qual_legal_rearranged);
    ADD_ENUM_VALUE("replace", eFeat_qual_legal_replace);
    ADD_ENUM_VALUE("rpt-family", eFeat_qual_legal_rpt_family);
    ADD_ENUM_VALUE("rpt-type", eFeat_qual_legal_rpt_type);
    ADD_ENUM_VALUE("rpt-unit", eFeat_qual_legal_rpt_unit);
    ADD_ENUM_VALUE("rpt-unit-seq", eFeat_qual_legal_rpt_unit_seq);
    ADD_ENUM_VALUE("rpt-unit-range", eFeat_qual_legal_rpt_unit_range);
    ADD_ENUM_VALUE("segment", eFeat_qual_legal_segment);
    ADD_ENUM_VALUE("sequenced-mol", eFeat_qual_legal_sequenced_mol);
    ADD_ENUM_VALUE("standard-name", eFeat_qual_legal_standard_name);
    ADD_ENUM_VALUE("synonym", eFeat_qual_legal_synonym);
    ADD_ENUM_VALUE("transcript-id", eFeat_qual_legal_transcript_id);
    ADD_ENUM_VALUE("transgenic", eFeat_qual_legal_transgenic);
    ADD_ENUM_VALUE("translation", eFeat_qual_legal_translation);
    ADD_ENUM_VALUE("transl-except", eFeat_qual_legal_transl_except);
    ADD_ENUM_VALUE("transl-table", eFeat_qual_legal_transl_table);
    ADD_ENUM_VALUE("usedin", eFeat_qual_legal_usedin);
    ADD_ENUM_VALUE("mobile-element-type", eFeat_qual_legal_mobile_element_type);
    ADD_ENUM_VALUE("mobile-element-name", eFeat_qual_legal_mobile_element_name);
    ADD_ENUM_VALUE("gene-comment", eFeat_qual_legal_gene_comment);
    ADD_ENUM_VALUE("satellite", eFeat_qual_legal_satellite);
    ADD_ENUM_VALUE("satellite-type", eFeat_qual_legal_satellite_type);
    ADD_ENUM_VALUE("satellite-name", eFeat_qual_legal_satellite_name);
    ADD_ENUM_VALUE("location", eFeat_qual_legal_location);
    ADD_ENUM_VALUE("tag-peptide", eFeat_qual_legal_tag_peptide);
    ADD_ENUM_VALUE("mobile-element-type-type", eFeat_qual_legal_mobile_element_type_type);
    ADD_ENUM_VALUE("name", eFeat_qual_legal_name);
    ADD_ENUM_VALUE("pcr-conditions", eFeat_qual_legal_pcr_conditions);
    ADD_ENUM_VALUE("regulatory-class", eFeat_qual_legal_regulatory_class);
}
END_ENUM_INFO


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

